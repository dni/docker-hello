name: Publish Docker image on Docker Hub and Github

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+"

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#       - name: Build and publish to pypi
#         uses: JRubics/poetry-publish@v1.15
#         with:
#           pypi_token: ${{ secrets.PYPI_API_KEY }}

      - name: Create github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" --generate-notes

  # push_to_dockerhub:
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Extract metadata for the Docker image
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: dni256/hello

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  # push_to_github:
  #   name: Push Docker image to Github
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Log into the Container registry
  #     uses: docker/login-action@v2
  #     with:
  #       registry: ${{ env.REGISTRY }}
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: Extract metadata for the Docker image
  #     id: meta
  #     uses: docker/metadata-action@v4
  #     with:
  #       images: dni256/${{ env.IMAGE_NAME }}

  #   - name: Build and push the Docker image
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: .
  #       push: true
  #       tags: ${{ steps.meta.outputs.tags }}
  #       labels: ${{ steps.meta.outputs.labels }}
